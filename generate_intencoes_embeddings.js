const fs = require("fs");
const path = require("path");
const { OpenAI } = require("openai");
require("dotenv").config();

const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });

const intencoes = [
  // ENTRADA/RECEITA
  { intencao: "registrar_entrada_periodo", frases: [
  "recebi meu sal√°rio",
  "entrou um pix de 200",
  "ganhei comiss√£o de venda",
  "recebi pagamento de cliente",
  "caiu dinheiro na conta",
  "depositaram 500 pra mim",
  "entrou transfer√™ncia banc√°ria",
  "vendi um produto hoje",
  "fiz uma venda agora",
  "entrou grana do servi√ßo",
  "me pagaram 150",
  "pix recebido do Jo√£o"

]
},


  // OUTROS EXEMPLOS...
  // Aqui adicione outras inten√ß√µes espec√≠ficas do seu neg√≥cio, sempre sem repetir frases entre inten√ß√µes!
];


async function gerarEmbedding(texto) {
  const response = await openai.embeddings.create({
    model: "text-embedding-ada-002",
    input: texto
  });
  return response.data[0].embedding;
}

async function gerarBase() {
  const resultado = [];

  for (const item of intencoes) {
    for (const frase of item.frases) {
      console.log(`üß† Embedding: [${item.intencao}] ‚Üí "${frase}"`);
      const embedding = await gerarEmbedding(frase);
      resultado.push({
        intencao: item.intencao,
        frase,
        embedding
      });
    }
  }

  const outputPath = path.join(__dirname, "base_inteligencia_unificada.json");
  fs.writeFileSync(outputPath, JSON.stringify(resultado, null, 2));
  console.log("\n‚úÖ base_inteligencia_unificada.json gerado com sucesso!");
}

gerarBase();
